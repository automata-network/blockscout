# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and push to registry

on:
  push:
    branches: 
    - master

env:
  OTP_VERSION: '24.3.4.1'
  ELIXIR_VERSION: '1.13.4'
  ECR_REGISTRY: 305587085711.dkr.ecr.us-west-2.amazonaws.com
  ECR_REPOSITORY: blockscout

jobs:
  build-and-push-to-registry:
    name: Push docker image to registry
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repo
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      id: docker-builder
      uses: docker/setup-buildx-action@v2

    - name: Log in to ECR
      uses: docker/login-action@v2
      with:
        registry: ${{ env.ECR_REGISTRY }}
        username: ${{ secrets.ECR_ACCESS_KEY_ID }}
        password: ${{ secrets.ECR_ACCESS_KEY }}

    - name: Cache Buildx
      uses: actions/cache@v3
      id: buildx-cache
      with:
        # https://github.com/actions/cache/blob/main/examples.md#elixir---mix
        path: |
          ${{ github.workspace }}/deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-

    - name: Extract metadata (tags, labels) for Docker
      id: meta_alt
      uses: docker/metadata-action@v4
      with:
        images: |
          ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}
        tags: |
          type=raw,value={{sha}}-alt
          type=raw,value={{branch}}-{{sha}}-alt
          type=raw,value=latest-alt,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      id: docker_build_ALT
      with:
        context: .
        file: ./docker/Dockerfile
        push: true
        builder: ${{ steps.docker-builder.outputs.name }}
        cache-from: |
          type=local,src=${{ github.workspace }}/deps
        cache-to: |
          type=local,dest=${{ github.workspace }}/deps
        tags: ${{ steps.meta_alt.outputs.tags }}
        build-args: |
          COIN_PARAM=ATA
          CACHE_EXCHANGE_RATES_PERIOD=
          DISABLE_READ_API=false
          API_PATH=
          NETWORK_PATH=
          DISABLE_WEBAPP=false
          DISABLE_WRITE_API=false
          CACHE_ENABLE_TOTAL_GAS_USAGE_COUNTER=
          WOBSERVER_ENABLED=false
          ADMIN_PANEL_ENABLED=false
          CACHE_ADDRESS_WITH_BALANCES_UPDATE_INTERVAL=
          DISABLE_BRIDGE_MARKET_CAP_UPDATER=false
          CACHE_BRIDGE_MARKET_CAP_UPDATE_INTERVAL=
          SOCKET_ROOT=

    - name: Extract metadata (tags, labels) for Docker
      id: meta_eth
      uses: docker/metadata-action@v4
      with:
        images: |
          ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}
        tags: |
          type=raw,value={{sha}}-eth
          type=raw,value={{branch}}-{{sha}}-eth
          type=raw,value=latest-eth,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      id: docker_build_ETH
      with:
        context: .
        file: ./docker/Dockerfile
        push: true
        builder: ${{ steps.docker-builder.outputs.name }}
        cache-from: |
          type=local,src=${{ github.workspace }}/deps
        cache-to: |
          type=local,dest=${{ github.workspace }}/deps
        tags: ${{ steps.meta_eth.outputs.tags }}
        build-args: |
          COIN_PARAM=ETH
          CACHE_EXCHANGE_RATES_PERIOD=
          DISABLE_READ_API=false
          API_PATH=
          NETWORK_PATH=
          DISABLE_WEBAPP=false
          DISABLE_WRITE_API=false
          CACHE_ENABLE_TOTAL_GAS_USAGE_COUNTER=
          WOBSERVER_ENABLED=false
          ADMIN_PANEL_ENABLED=false
          CACHE_ADDRESS_WITH_BALANCES_UPDATE_INTERVAL=
          DISABLE_BRIDGE_MARKET_CAP_UPDATER=false
          CACHE_BRIDGE_MARKET_CAP_UPDATE_INTERVAL=
          SOCKET_ROOT=

    - name: Extract metadata (tags, labels) for Docker
      id: meta_carriercoo
      uses: docker/metadata-action@v4
      with:
        images: |
          ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}
        tags: |
          type=raw,value={{sha}}-carriercoo
          type=raw,value={{branch}}-{{sha}}-carriercoo
          type=raw,value=latest-carriercoo,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      id: docker_build_HOM
      with:
        context: .
        file: ./docker/Dockerfile
        push: true
        builder: ${{ steps.docker-builder.outputs.name }}
        cache-from: |
          type=local,src=${{ github.workspace }}/deps
        cache-to: |
          type=local,dest=${{ github.workspace }}/deps
        tags: ${{ steps.meta_carriercoo.outputs.tags }}
        build-args: |
          COIN_PARAM=HOM
          CACHE_EXCHANGE_RATES_PERIOD=
          DISABLE_READ_API=false
          API_PATH=
          NETWORK_PATH=
          DISABLE_WEBAPP=false
          DISABLE_WRITE_API=false
          CACHE_ENABLE_TOTAL_GAS_USAGE_COUNTER=
          WOBSERVER_ENABLED=false
          ADMIN_PANEL_ENABLED=false
          CACHE_ADDRESS_WITH_BALANCES_UPDATE_INTERVAL=
          DISABLE_BRIDGE_MARKET_CAP_UPDATER=false
          CACHE_BRIDGE_MARKET_CAP_UPDATE_INTERVAL=
          SOCKET_ROOT=

    - name: Extract metadata (tags, labels) for Docker
      id: meta_df_ares
      uses: docker/metadata-action@v4
      with:
        images: |
          ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}
        tags: |
          type=raw,value={{sha}}-df-ares
          type=raw,value={{branch}}-{{sha}}-df-ares
          type=raw,value=latest-df-ares,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      id: docker_build_RES
      with:
        context: .
        file: ./docker/Dockerfile
        push: true
        builder: ${{ steps.docker-builder.outputs.name }}
        cache-from: |
          type=local,src=${{ github.workspace }}/deps
        cache-to: |
          type=local,dest=${{ github.workspace }}/deps
        tags: ${{ steps.meta_df_ares.outputs.tags }}
        build-args: |
          COIN_PARAM=RES
          CACHE_EXCHANGE_RATES_PERIOD=
          DISABLE_READ_API=false
          API_PATH=
          NETWORK_PATH=
          DISABLE_WEBAPP=false
          DISABLE_WRITE_API=false
          CACHE_ENABLE_TOTAL_GAS_USAGE_COUNTER=
          WOBSERVER_ENABLED=false
          ADMIN_PANEL_ENABLED=false
          CACHE_ADDRESS_WITH_BALANCES_UPDATE_INTERVAL=
          DISABLE_BRIDGE_MARKET_CAP_UPDATER=false
          CACHE_BRIDGE_MARKET_CAP_UPDATE_INTERVAL=
          SOCKET_ROOT=

    - name: Extract metadata (tags, labels) for Docker (ZERO)
      id: meta_zero
      uses: docker/metadata-action@v4
      with:
        images: |
          ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}
        tags: |
          type=raw,value={{sha}}-zero
          type=raw,value={{branch}}-{{sha}}-zero
          type=raw,value=latest-zero,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}

    - name: Build and push Docker image (ZERO)
      uses: docker/build-push-action@v3
      id: docker_build_zero
      with:
        context: .
        file: ./docker/Dockerfile
        push: true
        builder: ${{ steps.docker-builder.outputs.name }}
        cache-from: |
          type=local,src=${{ github.workspace }}/deps
        cache-to: |
          type=local,dest=${{ github.workspace }}/deps
        tags: ${{ steps.meta_zero.outputs.tags }}
        build-args: |
          COIN_PARAM=ZERO
          CACHE_EXCHANGE_RATES_PERIOD=
          DISABLE_READ_API=false
          API_PATH=
          NETWORK_PATH=
          DISABLE_WEBAPP=false
          DISABLE_WRITE_API=false
          CACHE_ENABLE_TOTAL_GAS_USAGE_COUNTER=
          WOBSERVER_ENABLED=false
          ADMIN_PANEL_ENABLED=false
          CACHE_ADDRESS_WITH_BALANCES_UPDATE_INTERVAL=
          DISABLE_BRIDGE_MARKET_CAP_UPDATER=false
          CACHE_BRIDGE_MARKET_CAP_UPDATE_INTERVAL=
          SOCKET_ROOT=

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
